/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.cmu.dynet.internal;

public class ParameterStorage extends ParameterStorageBase {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected ParameterStorage(long cPtr, boolean cMemoryOwn) {
    super(dynet_swigJNI.ParameterStorage_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ParameterStorage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        dynet_swigJNI.delete_ParameterStorage(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void scale_parameters(float a) {
    dynet_swigJNI.ParameterStorage_scale_parameters(swigCPtr, this, a);
  }

  public void zero() {
    dynet_swigJNI.ParameterStorage_zero(swigCPtr, this);
  }

  public void squared_l2norm(SWIGTYPE_p_float sqnorm) {
    dynet_swigJNI.ParameterStorage_squared_l2norm(swigCPtr, this, SWIGTYPE_p_float.getCPtr(sqnorm));
  }

  public void g_squared_l2norm(SWIGTYPE_p_float sqnorm) {
    dynet_swigJNI.ParameterStorage_g_squared_l2norm(swigCPtr, this, SWIGTYPE_p_float.getCPtr(sqnorm));
  }

  public long size() {
    return dynet_swigJNI.ParameterStorage_size(swigCPtr, this);
  }

  public void copy(ParameterStorage val) {
    dynet_swigJNI.ParameterStorage_copy(swigCPtr, this, ParameterStorage.getCPtr(val), val);
  }

  public void accumulate_grad(Tensor g) {
    dynet_swigJNI.ParameterStorage_accumulate_grad(swigCPtr, this, Tensor.getCPtr(g), g);
  }

  public void clear() {
    dynet_swigJNI.ParameterStorage_clear(swigCPtr, this);
  }

  public void setDim(Dim value) {
    dynet_swigJNI.ParameterStorage_dim_set(swigCPtr, this, Dim.getCPtr(value), value);
  }

  public Dim getDim() {
    long cPtr = dynet_swigJNI.ParameterStorage_dim_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Dim(cPtr, false);
  }

  public void setValues(Tensor value) {
    dynet_swigJNI.ParameterStorage_values_set(swigCPtr, this, Tensor.getCPtr(value), value);
  }

  public Tensor getValues() {
    long cPtr = dynet_swigJNI.ParameterStorage_values_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Tensor(cPtr, false);
  }

  public void setG(Tensor value) {
    dynet_swigJNI.ParameterStorage_g_set(swigCPtr, this, Tensor.getCPtr(value), value);
  }

  public Tensor getG() {
    long cPtr = dynet_swigJNI.ParameterStorage_g_get(swigCPtr, this);
    return (cPtr == 0) ? null : new Tensor(cPtr, false);
  }

}
