/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.cmu.dynet.internal;

  import java.io.*;

public class dynet_swigJNI {


  static boolean loadFromFile(String pathname) {
    try {
      System.load(pathname);
      System.err.println("[dynet] Loading DyNet from " + pathname + "...");
      return true;
    }
    catch (UnsatisfiedLinkError exception) {
      return false;
    }
  }

  static boolean loadFromFile(String dir, String libname) {
    String pathname = dir + File.separator + libname;
    return loadFromFile(pathname);
  }

  static String replaceSuffix(String text, String prev, String next) {
    if (text.endsWith(prev))
      return text.substring(0, text.length() - prev.length()) + next;
    else
      return text;
  }

  static {
    String filename = "dynet_swig";
    String libname = System.mapLibraryName(filename);
    // The Mac reports a libname ending with .dylib, but Java needs .jnilib instead.
    String jniname = replaceSuffix(libname, ".dylib", ".jnilib");

    boolean loaded = false;
    if (!loaded)
      loaded = loadFromFile(System.getProperty("user.dir"), jniname); // Try current directory first.
    if (!loaded)
      loaded = loadFromFile(System.getProperty("user.home"), jniname); // Try home directory next.
    if (!loaded) {
      try {
        // Attempt to load from the resource via the tmp directory.
        int index = jniname.indexOf('.');
        String prefix = jniname.substring(0, index);
        String suffix = jniname.substring(index);
        File tempFile = File.createTempFile(prefix + "-", suffix);

        // Load the jnilib from the JAR-ed resource file, and write it to the temp file.
        // We've anticipated the name and used it for the resource, but that could go wrong.
        InputStream is = dynet_swigJNI.class.getClassLoader().getResourceAsStream(jniname);
        OutputStream os = new FileOutputStream(tempFile);

        byte buf[] = new byte[8192];
        int len;
        while ((len = is.read(buf)) > 0) {
          os.write(buf, 0, len);
        }

        os.flush();
        InputStream lock = new FileInputStream(tempFile);
        os.close();

        loaded = loadFromFile(tempFile.getAbsolutePath());
        lock.close();

        tempFile.delete();

        if (!loaded)
          throw new RuntimeException("DyNet could not be loaded!");
      }
      catch (Exception exception) {
        exception.printStackTrace(System.err);
      }
    }
  }


  public final static native void throwRuntimeError();
  public final static native void throwSubRuntimeError();
  public final static native void throwLogicError();
  public final static native void throwSubLogicError();
  public final static native void throwException();
  public final static native void throwSubException();
  public final static native void throwUnknown();
  public final static native void raiseSignal(int jarg1);
  public final static native void readNullPtr();
  public final static native void writeNullPtr();
  public final static native int mtrace();
  public final static native int muntrace();
  public final static native long new_MemDebug();
  public final static native void delete_MemDebug(long jarg1);
  public final static native void MemDebug_debug(long jarg1, MemDebug jarg1_);
  public final static native void MemDebug_leak_malloc(long jarg1, MemDebug jarg1_);
  public final static native void MemDebug_leak_new(long jarg1, MemDebug jarg1_);
  public final static native void MemDebug_leak_mm_malloc(long jarg1, MemDebug jarg1_);
  public final static native void MemDebug_set_break(long jarg1, MemDebug jarg1_, int jarg2);
  public final static native long new_Trace();
  public final static native void delete_Trace(long jarg1);
  public final static native long new_uintp();
  public final static native long copy_uintp(long jarg1);
  public final static native void delete_uintp(long jarg1);
  public final static native void uintp_assign(long jarg1, long jarg2);
  public final static native long uintp_value(long jarg1);
  public final static native long new_intp();
  public final static native long copy_intp(int jarg1);
  public final static native void delete_intp(long jarg1);
  public final static native void intp_assign(long jarg1, int jarg2);
  public final static native int intp_value(long jarg1);
  public final static native long new_floatp();
  public final static native long copy_floatp(float jarg1);
  public final static native void delete_floatp(long jarg1);
  public final static native void floatp_assign(long jarg1, float jarg2);
  public final static native float floatp_value(long jarg1);
  public final static native long new_IntVector__SWIG_0();
  public final static native long new_IntVector__SWIG_1(long jarg1);
  public final static native long IntVector_size(long jarg1, IntVector jarg1_);
  public final static native long IntVector_capacity(long jarg1, IntVector jarg1_);
  public final static native void IntVector_reserve(long jarg1, IntVector jarg1_, long jarg2);
  public final static native boolean IntVector_isEmpty(long jarg1, IntVector jarg1_);
  public final static native void IntVector_clear(long jarg1, IntVector jarg1_);
  public final static native void IntVector_add(long jarg1, IntVector jarg1_, int jarg2);
  public final static native int IntVector_get(long jarg1, IntVector jarg1_, int jarg2);
  public final static native void IntVector_set(long jarg1, IntVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_IntVector(long jarg1);
  public final static native long new_UnsignedVector__SWIG_0();
  public final static native long new_UnsignedVector__SWIG_1(long jarg1);
  public final static native long UnsignedVector_size(long jarg1, UnsignedVector jarg1_);
  public final static native long UnsignedVector_capacity(long jarg1, UnsignedVector jarg1_);
  public final static native void UnsignedVector_reserve(long jarg1, UnsignedVector jarg1_, long jarg2);
  public final static native boolean UnsignedVector_isEmpty(long jarg1, UnsignedVector jarg1_);
  public final static native void UnsignedVector_clear(long jarg1, UnsignedVector jarg1_);
  public final static native void UnsignedVector_add(long jarg1, UnsignedVector jarg1_, long jarg2);
  public final static native long UnsignedVector_get(long jarg1, UnsignedVector jarg1_, int jarg2);
  public final static native void UnsignedVector_set(long jarg1, UnsignedVector jarg1_, int jarg2, long jarg3);
  public final static native void delete_UnsignedVector(long jarg1);
  public final static native long new_UnsignedVectorVector__SWIG_0();
  public final static native long new_UnsignedVectorVector__SWIG_1(long jarg1);
  public final static native long UnsignedVectorVector_size(long jarg1, UnsignedVectorVector jarg1_);
  public final static native long UnsignedVectorVector_capacity(long jarg1, UnsignedVectorVector jarg1_);
  public final static native void UnsignedVectorVector_reserve(long jarg1, UnsignedVectorVector jarg1_, long jarg2);
  public final static native boolean UnsignedVectorVector_isEmpty(long jarg1, UnsignedVectorVector jarg1_);
  public final static native void UnsignedVectorVector_clear(long jarg1, UnsignedVectorVector jarg1_);
  public final static native void UnsignedVectorVector_add(long jarg1, UnsignedVectorVector jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long UnsignedVectorVector_get(long jarg1, UnsignedVectorVector jarg1_, int jarg2);
  public final static native void UnsignedVectorVector_set(long jarg1, UnsignedVectorVector jarg1_, int jarg2, long jarg3, UnsignedVector jarg3_);
  public final static native void delete_UnsignedVectorVector(long jarg1);
  public final static native long new_DoubleVector__SWIG_0();
  public final static native long new_DoubleVector__SWIG_1(long jarg1);
  public final static native long DoubleVector_size(long jarg1, DoubleVector jarg1_);
  public final static native long DoubleVector_capacity(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_reserve(long jarg1, DoubleVector jarg1_, long jarg2);
  public final static native boolean DoubleVector_isEmpty(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_clear(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_add(long jarg1, DoubleVector jarg1_, double jarg2);
  public final static native double DoubleVector_get(long jarg1, DoubleVector jarg1_, int jarg2);
  public final static native void DoubleVector_set(long jarg1, DoubleVector jarg1_, int jarg2, double jarg3);
  public final static native void delete_DoubleVector(long jarg1);
  public final static native long new_FloatVector__SWIG_0();
  public final static native long new_FloatVector__SWIG_1(long jarg1);
  public final static native long FloatVector_size(long jarg1, FloatVector jarg1_);
  public final static native long FloatVector_capacity(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_reserve(long jarg1, FloatVector jarg1_, long jarg2);
  public final static native boolean FloatVector_isEmpty(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_clear(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_add(long jarg1, FloatVector jarg1_, float jarg2);
  public final static native float FloatVector_get(long jarg1, FloatVector jarg1_, int jarg2);
  public final static native void FloatVector_set(long jarg1, FloatVector jarg1_, int jarg2, float jarg3);
  public final static native void delete_FloatVector(long jarg1);
  public final static native long new_LongVector__SWIG_0();
  public final static native long new_LongVector__SWIG_1(long jarg1);
  public final static native long LongVector_size(long jarg1, LongVector jarg1_);
  public final static native long LongVector_capacity(long jarg1, LongVector jarg1_);
  public final static native void LongVector_reserve(long jarg1, LongVector jarg1_, long jarg2);
  public final static native boolean LongVector_isEmpty(long jarg1, LongVector jarg1_);
  public final static native void LongVector_clear(long jarg1, LongVector jarg1_);
  public final static native void LongVector_add(long jarg1, LongVector jarg1_, int jarg2);
  public final static native int LongVector_get(long jarg1, LongVector jarg1_, int jarg2);
  public final static native void LongVector_set(long jarg1, LongVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_LongVector(long jarg1);
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1);
  public final static native long StringVector_size(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native void StringVector_add(long jarg1, StringVector jarg1_, String jarg2);
  public final static native String StringVector_get(long jarg1, StringVector jarg1_, int jarg2);
  public final static native void StringVector_set(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_ExpressionVector__SWIG_0();
  public final static native long new_ExpressionVector__SWIG_1(long jarg1);
  public final static native long ExpressionVector_size(long jarg1, ExpressionVector jarg1_);
  public final static native long ExpressionVector_capacity(long jarg1, ExpressionVector jarg1_);
  public final static native void ExpressionVector_reserve(long jarg1, ExpressionVector jarg1_, long jarg2);
  public final static native boolean ExpressionVector_isEmpty(long jarg1, ExpressionVector jarg1_);
  public final static native void ExpressionVector_clear(long jarg1, ExpressionVector jarg1_);
  public final static native void ExpressionVector_add(long jarg1, ExpressionVector jarg1_, long jarg2, Expression jarg2_);
  public final static native long ExpressionVector_get(long jarg1, ExpressionVector jarg1_, int jarg2);
  public final static native void ExpressionVector_set(long jarg1, ExpressionVector jarg1_, int jarg2, long jarg3, Expression jarg3_);
  public final static native void delete_ExpressionVector(long jarg1);
  public final static native long new_ParameterStorageVector__SWIG_0();
  public final static native long new_ParameterStorageVector__SWIG_1(long jarg1);
  public final static native long ParameterStorageVector_size(long jarg1, ParameterStorageVector jarg1_);
  public final static native long ParameterStorageVector_capacity(long jarg1, ParameterStorageVector jarg1_);
  public final static native void ParameterStorageVector_reserve(long jarg1, ParameterStorageVector jarg1_, long jarg2);
  public final static native boolean ParameterStorageVector_isEmpty(long jarg1, ParameterStorageVector jarg1_);
  public final static native void ParameterStorageVector_clear(long jarg1, ParameterStorageVector jarg1_);
  public final static native void ParameterStorageVector_add(long jarg1, ParameterStorageVector jarg1_, long jarg2, ParameterStorage jarg2_);
  public final static native long ParameterStorageVector_get(long jarg1, ParameterStorageVector jarg1_, int jarg2);
  public final static native void ParameterStorageVector_set(long jarg1, ParameterStorageVector jarg1_, int jarg2, long jarg3, ParameterStorage jarg3_);
  public final static native void delete_ParameterStorageVector(long jarg1);
  public final static native long new_LookupParameterStorageVector__SWIG_0();
  public final static native long new_LookupParameterStorageVector__SWIG_1(long jarg1);
  public final static native long LookupParameterStorageVector_size(long jarg1, LookupParameterStorageVector jarg1_);
  public final static native long LookupParameterStorageVector_capacity(long jarg1, LookupParameterStorageVector jarg1_);
  public final static native void LookupParameterStorageVector_reserve(long jarg1, LookupParameterStorageVector jarg1_, long jarg2);
  public final static native boolean LookupParameterStorageVector_isEmpty(long jarg1, LookupParameterStorageVector jarg1_);
  public final static native void LookupParameterStorageVector_clear(long jarg1, LookupParameterStorageVector jarg1_);
  public final static native void LookupParameterStorageVector_add(long jarg1, LookupParameterStorageVector jarg1_, long jarg2, LookupParameterStorage jarg2_);
  public final static native long LookupParameterStorageVector_get(long jarg1, LookupParameterStorageVector jarg1_, int jarg2);
  public final static native void LookupParameterStorageVector_set(long jarg1, LookupParameterStorageVector jarg1_, int jarg2, long jarg3, LookupParameterStorage jarg3_);
  public final static native void delete_LookupParameterStorageVector(long jarg1);
  public final static native long new_ExpressionVectorVector__SWIG_0();
  public final static native long new_ExpressionVectorVector__SWIG_1(long jarg1);
  public final static native long ExpressionVectorVector_size(long jarg1, ExpressionVectorVector jarg1_);
  public final static native long ExpressionVectorVector_capacity(long jarg1, ExpressionVectorVector jarg1_);
  public final static native void ExpressionVectorVector_reserve(long jarg1, ExpressionVectorVector jarg1_, long jarg2);
  public final static native boolean ExpressionVectorVector_isEmpty(long jarg1, ExpressionVectorVector jarg1_);
  public final static native void ExpressionVectorVector_clear(long jarg1, ExpressionVectorVector jarg1_);
  public final static native void ExpressionVectorVector_add(long jarg1, ExpressionVectorVector jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long ExpressionVectorVector_get(long jarg1, ExpressionVectorVector jarg1_, int jarg2);
  public final static native void ExpressionVectorVector_set(long jarg1, ExpressionVectorVector jarg1_, int jarg2, long jarg3, ExpressionVector jarg3_);
  public final static native void delete_ExpressionVectorVector(long jarg1);
  public final static native long new_ParameterVector__SWIG_0();
  public final static native long new_ParameterVector__SWIG_1(long jarg1);
  public final static native long ParameterVector_size(long jarg1, ParameterVector jarg1_);
  public final static native long ParameterVector_capacity(long jarg1, ParameterVector jarg1_);
  public final static native void ParameterVector_reserve(long jarg1, ParameterVector jarg1_, long jarg2);
  public final static native boolean ParameterVector_isEmpty(long jarg1, ParameterVector jarg1_);
  public final static native void ParameterVector_clear(long jarg1, ParameterVector jarg1_);
  public final static native void ParameterVector_add(long jarg1, ParameterVector jarg1_, long jarg2, Parameter jarg2_);
  public final static native long ParameterVector_get(long jarg1, ParameterVector jarg1_, int jarg2);
  public final static native void ParameterVector_set(long jarg1, ParameterVector jarg1_, int jarg2, long jarg3, Parameter jarg3_);
  public final static native void delete_ParameterVector(long jarg1);
  public final static native long new_ParameterVectorVector__SWIG_0();
  public final static native long new_ParameterVectorVector__SWIG_1(long jarg1);
  public final static native long ParameterVectorVector_size(long jarg1, ParameterVectorVector jarg1_);
  public final static native long ParameterVectorVector_capacity(long jarg1, ParameterVectorVector jarg1_);
  public final static native void ParameterVectorVector_reserve(long jarg1, ParameterVectorVector jarg1_, long jarg2);
  public final static native boolean ParameterVectorVector_isEmpty(long jarg1, ParameterVectorVector jarg1_);
  public final static native void ParameterVectorVector_clear(long jarg1, ParameterVectorVector jarg1_);
  public final static native void ParameterVectorVector_add(long jarg1, ParameterVectorVector jarg1_, long jarg2, ParameterVector jarg2_);
  public final static native long ParameterVectorVector_get(long jarg1, ParameterVectorVector jarg1_, int jarg2);
  public final static native void ParameterVectorVector_set(long jarg1, ParameterVectorVector jarg1_, int jarg2, long jarg3, ParameterVector jarg3_);
  public final static native void delete_ParameterVectorVector(long jarg1);
  public final static native long new_Dim__SWIG_0();
  public final static native long new_Dim__SWIG_1(long jarg1, LongVector jarg1_);
  public final static native long new_Dim__SWIG_2(long jarg1, LongVector jarg1_, long jarg2);
  public final static native long Dim_size__SWIG_0(long jarg1, Dim jarg1_);
  public final static native long Dim_batch_size(long jarg1, Dim jarg1_);
  public final static native long Dim_sum_dims(long jarg1, Dim jarg1_);
  public final static native long Dim_truncate(long jarg1, Dim jarg1_);
  public final static native long Dim_single_batch(long jarg1, Dim jarg1_);
  public final static native void Dim_resize(long jarg1, Dim jarg1_, long jarg2);
  public final static native long Dim_ndims(long jarg1, Dim jarg1_);
  public final static native long Dim_rows(long jarg1, Dim jarg1_);
  public final static native long Dim_cols(long jarg1, Dim jarg1_);
  public final static native long Dim_batch_elems(long jarg1, Dim jarg1_);
  public final static native void Dim_set(long jarg1, Dim jarg1_, long jarg2, long jarg3);
  public final static native long Dim_get(long jarg1, Dim jarg1_, long jarg2);
  public final static native long Dim_size__SWIG_1(long jarg1, Dim jarg1_, long jarg2);
  public final static native void Dim_delete_dim(long jarg1, Dim jarg1_, long jarg2);
  public final static native long Dim_transpose(long jarg1, Dim jarg1_);
  public final static native void delete_Dim(long jarg1);
  public final static native long new_Parameter();
  public final static native void Parameter_zero(long jarg1, Parameter jarg1_);
  public final static native long Parameter_dim(long jarg1, Parameter jarg1_);
  public final static native long Parameter_values(long jarg1, Parameter jarg1_);
  public final static native void Parameter_set_updated(long jarg1, Parameter jarg1_, boolean jarg2);
  public final static native boolean Parameter_is_updated(long jarg1, Parameter jarg1_);
  public final static native void delete_Parameter(long jarg1);
  public final static native long new_LookupParameter();
  public final static native void LookupParameter_initialize(long jarg1, LookupParameter jarg1_, long jarg2, long jarg3, FloatVector jarg3_);
  public final static native void LookupParameter_zero(long jarg1, LookupParameter jarg1_);
  public final static native long LookupParameter_dim(long jarg1, LookupParameter jarg1_);
  public final static native long LookupParameter_values(long jarg1, LookupParameter jarg1_);
  public final static native void LookupParameter_set_updated(long jarg1, LookupParameter jarg1_, boolean jarg2);
  public final static native boolean LookupParameter_is_updated(long jarg1, LookupParameter jarg1_);
  public final static native void delete_LookupParameter(long jarg1);
  public final static native void delete_ParameterInit(long jarg1);
  public final static native void ParameterInit_initialize_params(long jarg1, ParameterInit jarg1_, long jarg2, Tensor jarg2_);
  public final static native long new_ParameterInitNormal__SWIG_0(float jarg1, float jarg2);
  public final static native long new_ParameterInitNormal__SWIG_1(float jarg1);
  public final static native long new_ParameterInitNormal__SWIG_2();
  public final static native void ParameterInitNormal_initialize_params(long jarg1, ParameterInitNormal jarg1_, long jarg2, Tensor jarg2_);
  public final static native void delete_ParameterInitNormal(long jarg1);
  public final static native long new_ParameterInitUniform__SWIG_0(float jarg1);
  public final static native long new_ParameterInitUniform__SWIG_1(float jarg1, float jarg2);
  public final static native void ParameterInitUniform_initialize_params(long jarg1, ParameterInitUniform jarg1_, long jarg2, Tensor jarg2_);
  public final static native void delete_ParameterInitUniform(long jarg1);
  public final static native long new_ParameterInitConst(float jarg1);
  public final static native void ParameterInitConst_initialize_params(long jarg1, ParameterInitConst jarg1_, long jarg2, Tensor jarg2_);
  public final static native void delete_ParameterInitConst(long jarg1);
  public final static native long new_ParameterInitIdentity();
  public final static native void ParameterInitIdentity_initialize_params(long jarg1, ParameterInitIdentity jarg1_, long jarg2, Tensor jarg2_);
  public final static native void delete_ParameterInitIdentity(long jarg1);
  public final static native long new_ParameterInitGlorot__SWIG_0(boolean jarg1);
  public final static native long new_ParameterInitGlorot__SWIG_1();
  public final static native void ParameterInitGlorot_initialize_params(long jarg1, ParameterInitGlorot jarg1_, long jarg2, Tensor jarg2_);
  public final static native void delete_ParameterInitGlorot(long jarg1);
  public final static native long new_ParameterInitFromFile(String jarg1);
  public final static native void ParameterInitFromFile_initialize_params(long jarg1, ParameterInitFromFile jarg1_, long jarg2, Tensor jarg2_);
  public final static native void delete_ParameterInitFromFile(long jarg1);
  public final static native long new_ParameterInitFromVector(long jarg1, FloatVector jarg1_);
  public final static native void ParameterInitFromVector_initialize_params(long jarg1, ParameterInitFromVector jarg1_, long jarg2, Tensor jarg2_);
  public final static native void delete_ParameterInitFromVector(long jarg1);
  public final static native void ParameterStorageBase_scale_parameters(long jarg1, ParameterStorageBase jarg1_, float jarg2);
  public final static native void ParameterStorageBase_zero(long jarg1, ParameterStorageBase jarg1_);
  public final static native void ParameterStorageBase_squared_l2norm(long jarg1, ParameterStorageBase jarg1_, long jarg2);
  public final static native void ParameterStorageBase_g_squared_l2norm(long jarg1, ParameterStorageBase jarg1_, long jarg2);
  public final static native long ParameterStorageBase_size(long jarg1, ParameterStorageBase jarg1_);
  public final static native void delete_ParameterStorageBase(long jarg1);
  public final static native void ParameterStorage_scale_parameters(long jarg1, ParameterStorage jarg1_, float jarg2);
  public final static native void ParameterStorage_zero(long jarg1, ParameterStorage jarg1_);
  public final static native void ParameterStorage_squared_l2norm(long jarg1, ParameterStorage jarg1_, long jarg2);
  public final static native void ParameterStorage_g_squared_l2norm(long jarg1, ParameterStorage jarg1_, long jarg2);
  public final static native long ParameterStorage_size(long jarg1, ParameterStorage jarg1_);
  public final static native void ParameterStorage_copy(long jarg1, ParameterStorage jarg1_, long jarg2, ParameterStorage jarg2_);
  public final static native void ParameterStorage_accumulate_grad(long jarg1, ParameterStorage jarg1_, long jarg2, Tensor jarg2_);
  public final static native void ParameterStorage_clear(long jarg1, ParameterStorage jarg1_);
  public final static native void ParameterStorage_dim_set(long jarg1, ParameterStorage jarg1_, long jarg2, Dim jarg2_);
  public final static native long ParameterStorage_dim_get(long jarg1, ParameterStorage jarg1_);
  public final static native void ParameterStorage_values_set(long jarg1, ParameterStorage jarg1_, long jarg2, Tensor jarg2_);
  public final static native long ParameterStorage_values_get(long jarg1, ParameterStorage jarg1_);
  public final static native void ParameterStorage_g_set(long jarg1, ParameterStorage jarg1_, long jarg2, Tensor jarg2_);
  public final static native long ParameterStorage_g_get(long jarg1, ParameterStorage jarg1_);
  public final static native void delete_ParameterStorage(long jarg1);
  public final static native void LookupParameterStorage_scale_parameters(long jarg1, LookupParameterStorage jarg1_, float jarg2);
  public final static native void LookupParameterStorage_zero(long jarg1, LookupParameterStorage jarg1_);
  public final static native void LookupParameterStorage_squared_l2norm(long jarg1, LookupParameterStorage jarg1_, long jarg2);
  public final static native void LookupParameterStorage_g_squared_l2norm(long jarg1, LookupParameterStorage jarg1_, long jarg2);
  public final static native long LookupParameterStorage_size(long jarg1, LookupParameterStorage jarg1_);
  public final static native void LookupParameterStorage_initialize(long jarg1, LookupParameterStorage jarg1_, long jarg2, long jarg3, FloatVector jarg3_);
  public final static native void LookupParameterStorage_copy(long jarg1, LookupParameterStorage jarg1_, long jarg2, LookupParameterStorage jarg2_);
  public final static native void LookupParameterStorage_accumulate_grad(long jarg1, LookupParameterStorage jarg1_, long jarg2, long jarg3, Tensor jarg3_);
  public final static native void LookupParameterStorage_accumulate_grads(long jarg1, LookupParameterStorage jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void LookupParameterStorage_clear(long jarg1, LookupParameterStorage jarg1_);
  public final static native void LookupParameterStorage_initialize_lookups(long jarg1, LookupParameterStorage jarg1_);
  public final static native void delete_LookupParameterStorage(long jarg1);
  public final static native long new_ParameterCollection();
  public final static native void delete_ParameterCollection(long jarg1);
  public final static native float ParameterCollection_gradient_l2_norm(long jarg1, ParameterCollection jarg1_);
  public final static native void ParameterCollection_reset_gradient(long jarg1, ParameterCollection jarg1_);
  public final static native long ParameterCollection_add_parameters__SWIG_0(long jarg1, ParameterCollection jarg1_, long jarg2, Dim jarg2_, float jarg3);
  public final static native long ParameterCollection_add_parameters__SWIG_1(long jarg1, ParameterCollection jarg1_, long jarg2, Dim jarg2_);
  public final static native long ParameterCollection_add_parameters__SWIG_2(long jarg1, ParameterCollection jarg1_, long jarg2, Dim jarg2_, long jarg3, ParameterInit jarg3_);
  public final static native long ParameterCollection_add_lookup_parameters__SWIG_0(long jarg1, ParameterCollection jarg1_, long jarg2, long jarg3, Dim jarg3_);
  public final static native long ParameterCollection_add_lookup_parameters__SWIG_1(long jarg1, ParameterCollection jarg1_, long jarg2, long jarg3, Dim jarg3_, long jarg4, ParameterInit jarg4_);
  public final static native void ParameterCollection_project_weights__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native void ParameterCollection_project_weights__SWIG_1(long jarg1, ParameterCollection jarg1_);
  public final static native void ParameterCollection_set_weight_decay_lambda(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long ParameterCollection_parameter_count(long jarg1, ParameterCollection jarg1_);
  public final static native long ParameterCollection_updated_parameter_count(long jarg1, ParameterCollection jarg1_);
  public final static native long ParameterCollection_parameters_list(long jarg1, ParameterCollection jarg1_);
  public final static native long ParameterCollection_lookup_parameters_list(long jarg1, ParameterCollection jarg1_);
  public final static native void Tensor_d_set(long jarg1, Tensor jarg1_, long jarg2, Dim jarg2_);
  public final static native long Tensor_d_get(long jarg1, Tensor jarg1_);
  public final static native void Tensor_v_set(long jarg1, Tensor jarg1_, long jarg2);
  public final static native long Tensor_v_get(long jarg1, Tensor jarg1_);
  public final static native long new_Tensor();
  public final static native void delete_Tensor(long jarg1);
  public final static native float as_scalar(long jarg1, Tensor jarg1_);
  public final static native long as_vector(long jarg1, Tensor jarg1_);
  public final static native float TensorTools_access_element(long jarg1, Tensor jarg1_, long jarg2, Dim jarg2_);
  public final static native long new_TensorTools();
  public final static native void delete_TensorTools(long jarg1);
  public final static native void Expression_pg_set(long jarg1, Expression jarg1_, long jarg2, ComputationGraph jarg2_);
  public final static native long Expression_pg_get(long jarg1, Expression jarg1_);
  public final static native void Expression_i_set(long jarg1, Expression jarg1_, long jarg2);
  public final static native long Expression_i_get(long jarg1, Expression jarg1_);
  public final static native long new_Expression(long jarg1, ComputationGraph jarg1_, long jarg2);
  public final static native long Expression_value(long jarg1, Expression jarg1_);
  public final static native long Expression_dim(long jarg1, Expression jarg1_);
  public final static native void delete_Expression(long jarg1);
  public final static native long input__SWIG_0(long jarg1, ComputationGraph jarg1_, float jarg2);
  public final static native long input__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2);
  public final static native long input__SWIG_2(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, long jarg3, FloatVector jarg3_);
  public final static native long input__SWIG_3(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, long jarg3, UnsignedVector jarg3_, long jarg4, FloatVector jarg4_, float jarg5);
  public final static native long input__SWIG_4(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, long jarg3, UnsignedVector jarg3_, long jarg4, FloatVector jarg4_);
  public final static native long parameter__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, Parameter jarg2_);
  public final static native long parameter__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_);
  public final static native long const_parameter__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, Parameter jarg2_);
  public final static native long const_parameter__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_);
  public final static native long lookup__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long lookup__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long const_lookup__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long const_lookup__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long lookup__SWIG_2(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3, UnsignedVector jarg3_);
  public final static native long const_lookup__SWIG_2(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3, UnsignedVector jarg3_);
  public final static native long zeros(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_);
  public final static native long zeroes(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_);
  public final static native long ones(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_);
  public final static native long constant(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, float jarg3);
  public final static native long random_normal(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_);
  public final static native long random_bernoulli__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, float jarg3, float jarg4);
  public final static native long random_bernoulli__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, float jarg3);
  public final static native long random_uniform(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, float jarg3, float jarg4);
  public final static native long random_gumbel__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, float jarg3, float jarg4);
  public final static native long random_gumbel__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, float jarg3);
  public final static native long random_gumbel__SWIG_2(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_);
  public final static native long exprMinus__SWIG_0(long jarg1, Expression jarg1_);
  public final static native long exprPlus__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long exprPlus__SWIG_1(long jarg1, Expression jarg1_, float jarg2);
  public final static native long exprPlus__SWIG_2(float jarg1, long jarg2, Expression jarg2_);
  public final static native long exprMinus__SWIG_1(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long exprMinus__SWIG_2(float jarg1, long jarg2, Expression jarg2_);
  public final static native long exprMinus__SWIG_3(long jarg1, Expression jarg1_, float jarg2);
  public final static native long exprTimes__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long exprTimes__SWIG_1(long jarg1, Expression jarg1_, float jarg2);
  public final static native long exprTimes__SWIG_2(float jarg1, long jarg2, Expression jarg2_);
  public final static native long exprDivide(long jarg1, Expression jarg1_, float jarg2);
  public final static native long affine_transform(long jarg1, ExpressionVector jarg1_);
  public final static native long sum(long jarg1, ExpressionVector jarg1_);
  public final static native long sum_elems(long jarg1, Expression jarg1_);
  public final static native long moment_elems(long jarg1, Expression jarg1_, long jarg2);
  public final static native long mean_elems(long jarg1, Expression jarg1_);
  public final static native long std_elems(long jarg1, Expression jarg1_);
  public final static native long sum_batches(long jarg1, Expression jarg1_);
  public final static native long moment_batches(long jarg1, Expression jarg1_, long jarg2);
  public final static native long mean_batches(long jarg1, Expression jarg1_);
  public final static native long std_batches(long jarg1, Expression jarg1_);
  public final static native long sum_dim__SWIG_0(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, boolean jarg3);
  public final static native long sum_dim__SWIG_1(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long sum_rows(long jarg1, Expression jarg1_);
  public final static native long sum_cols(long jarg1, Expression jarg1_);
  public final static native long moment_dim__SWIG_0(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3, boolean jarg4, long jarg5);
  public final static native long moment_dim__SWIG_1(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3, boolean jarg4);
  public final static native long moment_dim__SWIG_2(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3);
  public final static native long mean_dim__SWIG_0(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, boolean jarg3, long jarg4);
  public final static native long mean_dim__SWIG_1(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, boolean jarg3);
  public final static native long mean_dim__SWIG_2(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long std_dim__SWIG_0(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, boolean jarg3, long jarg4);
  public final static native long std_dim__SWIG_1(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, boolean jarg3);
  public final static native long std_dim__SWIG_2(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long average(long jarg1, ExpressionVector jarg1_);
  public final static native long sqrt(long jarg1, Expression jarg1_);
  public final static native long abs(long jarg1, Expression jarg1_);
  public final static native long erf(long jarg1, Expression jarg1_);
  public final static native long tanh(long jarg1, Expression jarg1_);
  public final static native long exp(long jarg1, Expression jarg1_);
  public final static native long square(long jarg1, Expression jarg1_);
  public final static native long cube(long jarg1, Expression jarg1_);
  public final static native long lgamma(long jarg1, Expression jarg1_);
  public final static native long log(long jarg1, Expression jarg1_);
  public final static native long logistic(long jarg1, Expression jarg1_);
  public final static native long rectify(long jarg1, Expression jarg1_);
  public final static native long elu__SWIG_0(long jarg1, Expression jarg1_, float jarg2);
  public final static native long elu__SWIG_1(long jarg1, Expression jarg1_);
  public final static native long selu(long jarg1, Expression jarg1_);
  public final static native long silu__SWIG_0(long jarg1, Expression jarg1_, float jarg2);
  public final static native long silu__SWIG_1(long jarg1, Expression jarg1_);
  public final static native long softsign(long jarg1, Expression jarg1_);
  public final static native long pow(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long min(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long max__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long max__SWIG_1(long jarg1, ExpressionVector jarg1_);
  public final static native long dot_product(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long cmult(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long cdiv(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long colwise_add(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long softmax__SWIG_0(long jarg1, Expression jarg1_, long jarg2);
  public final static native long softmax__SWIG_1(long jarg1, Expression jarg1_);
  public final static native long log_softmax__SWIG_0(long jarg1, Expression jarg1_);
  public final static native long log_softmax__SWIG_1(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long logsumexp_dim(long jarg1, Expression jarg1_, long jarg2);
  public final static native long logsumexp(long jarg1, ExpressionVector jarg1_);
  public final static native long pickneglogsoftmax__SWIG_0(long jarg1, Expression jarg1_, long jarg2);
  public final static native long pickneglogsoftmax__SWIG_1(long jarg1, Expression jarg1_, long jarg2);
  public final static native long pickneglogsoftmax__SWIG_2(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long hinge__SWIG_0(long jarg1, Expression jarg1_, long jarg2, float jarg3);
  public final static native long hinge__SWIG_1(long jarg1, Expression jarg1_, long jarg2);
  public final static native long hinge__SWIG_2(long jarg1, Expression jarg1_, long jarg2, float jarg3);
  public final static native long hinge__SWIG_3(long jarg1, Expression jarg1_, long jarg2);
  public final static native long hinge__SWIG_4(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, float jarg3);
  public final static native long hinge__SWIG_5(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long hinge_dim__SWIG_0(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3, float jarg4);
  public final static native long hinge_dim__SWIG_1(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3);
  public final static native long hinge_dim__SWIG_2(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long hinge_dim__SWIG_3(long jarg1, Expression jarg1_, long jarg2, UnsignedVectorVector jarg2_, long jarg3, float jarg4);
  public final static native long hinge_dim__SWIG_4(long jarg1, Expression jarg1_, long jarg2, UnsignedVectorVector jarg2_, long jarg3);
  public final static native long hinge_dim__SWIG_5(long jarg1, Expression jarg1_, long jarg2, UnsignedVectorVector jarg2_);
  public final static native long sparsemax(long jarg1, Expression jarg1_);
  public final static native long sparsemax_loss(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long squared_norm(long jarg1, Expression jarg1_);
  public final static native long l2_norm(long jarg1, Expression jarg1_);
  public final static native long squared_distance(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long l1_distance(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long huber_distance__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, float jarg3);
  public final static native long huber_distance__SWIG_1(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long binary_log_loss(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long pairwise_rank_loss__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, float jarg3);
  public final static native long pairwise_rank_loss__SWIG_1(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long poisson_loss__SWIG_0(long jarg1, Expression jarg1_, long jarg2);
  public final static native long poisson_loss__SWIG_1(long jarg1, Expression jarg1_, long jarg2);
  public final static native long nobackprop(long jarg1, Expression jarg1_);
  public final static native long flip_gradient(long jarg1, Expression jarg1_);
  public final static native long reshape(long jarg1, Expression jarg1_, long jarg2, Dim jarg2_);
  public final static native long transpose(long jarg1, Expression jarg1_);
  public final static native long select_rows(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long select_cols(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long pick__SWIG_0(long jarg1, Expression jarg1_, long jarg2, long jarg3);
  public final static native long pick__SWIG_1(long jarg1, Expression jarg1_, long jarg2);
  public final static native long pick__SWIG_2(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3);
  public final static native long pick__SWIG_3(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long pick__SWIG_4(long jarg1, Expression jarg1_, long jarg2, long jarg3);
  public final static native long pick__SWIG_5(long jarg1, Expression jarg1_, long jarg2);
  public final static native long pick_range__SWIG_0(long jarg1, Expression jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long pick_range__SWIG_1(long jarg1, Expression jarg1_, long jarg2, long jarg3);
  public final static native long pick_batch_elem(long jarg1, Expression jarg1_, long jarg2);
  public final static native long pick_batch_elems(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_);
  public final static native long concatenate_to_batch(long jarg1, ExpressionVector jarg1_);
  public final static native long strided_select__SWIG_0(long jarg1, Expression jarg1_, long jarg2, IntVector jarg2_, long jarg3, IntVector jarg3_, long jarg4, IntVector jarg4_);
  public final static native long strided_select__SWIG_1(long jarg1, Expression jarg1_, long jarg2, IntVector jarg2_, long jarg3, IntVector jarg3_);
  public final static native long strided_select__SWIG_2(long jarg1, Expression jarg1_, long jarg2, IntVector jarg2_);
  public final static native long concatenate_cols(long jarg1, ExpressionVector jarg1_);
  public final static native long concatenate__SWIG_0(long jarg1, ExpressionVector jarg1_, long jarg2);
  public final static native long concatenate__SWIG_1(long jarg1, ExpressionVector jarg1_);
  public final static native long max_dim__SWIG_0(long jarg1, Expression jarg1_, long jarg2);
  public final static native long max_dim__SWIG_1(long jarg1, Expression jarg1_);
  public final static native long min_dim__SWIG_0(long jarg1, Expression jarg1_, long jarg2);
  public final static native long min_dim__SWIG_1(long jarg1, Expression jarg1_);
  public final static native long noise(long jarg1, Expression jarg1_, float jarg2);
  public final static native long dropout(long jarg1, Expression jarg1_, float jarg2);
  public final static native long dropout_dim(long jarg1, Expression jarg1_, long jarg2, float jarg3);
  public final static native long dropout_batch(long jarg1, Expression jarg1_, float jarg2);
  public final static native long block_dropout(long jarg1, Expression jarg1_, float jarg2);
  public final static native long filter1d_narrow(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long kmax_pooling(long jarg1, Expression jarg1_, long jarg2);
  public final static native long fold_rows__SWIG_0(long jarg1, Expression jarg1_, long jarg2);
  public final static native long fold_rows__SWIG_1(long jarg1, Expression jarg1_);
  public final static native long average_cols(long jarg1, Expression jarg1_);
  public final static native long kmh_ngram(long jarg1, Expression jarg1_, long jarg2);
  public final static native long conv2d__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, UnsignedVector jarg3_, boolean jarg4);
  public final static native long conv2d__SWIG_1(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, UnsignedVector jarg3_);
  public final static native long conv2d__SWIG_2(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, Expression jarg3_, long jarg4, UnsignedVector jarg4_, boolean jarg5);
  public final static native long conv2d__SWIG_3(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, Expression jarg3_, long jarg4, UnsignedVector jarg4_);
  public final static native long maxpooling2d__SWIG_0(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3, UnsignedVector jarg3_, boolean jarg4);
  public final static native long maxpooling2d__SWIG_1(long jarg1, Expression jarg1_, long jarg2, UnsignedVector jarg2_, long jarg3, UnsignedVector jarg3_);
  public final static native long contract3d_1d__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long contract3d_1d_1d__SWIG_0(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, Expression jarg3_);
  public final static native long contract3d_1d_1d__SWIG_1(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, Expression jarg3_, long jarg4, Expression jarg4_);
  public final static native long contract3d_1d__SWIG_1(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, Expression jarg3_);
  public final static native long inverse(long jarg1, Expression jarg1_);
  public final static native long logdet(long jarg1, Expression jarg1_);
  public final static native long trace_of_product(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long layer_norm(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_, long jarg3, Expression jarg3_);
  public final static native long weight_norm(long jarg1, Expression jarg1_, long jarg2, Expression jarg2_);
  public final static native long new_ComputationGraph();
  public final static native void delete_ComputationGraph(long jarg1);
  public final static native long ComputationGraph_add_input__SWIG_0(long jarg1, ComputationGraph jarg1_, float jarg2, long jarg3, Device jarg3_);
  public final static native long ComputationGraph_add_input__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, long jarg3, FloatVector jarg3_, long jarg4, Device jarg4_);
  public final static native long ComputationGraph_add_input__SWIG_2(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, long jarg3, UnsignedVector jarg3_, long jarg4, FloatVector jarg4_, long jarg5, Device jarg5_, float jarg6);
  public final static native long ComputationGraph_add_input__SWIG_3(long jarg1, ComputationGraph jarg1_, long jarg2, Dim jarg2_, long jarg3, UnsignedVector jarg3_, long jarg4, FloatVector jarg4_, long jarg5, Device jarg5_);
  public final static native long ComputationGraph_add_parameters(long jarg1, ComputationGraph jarg1_, long jarg2, Parameter jarg2_);
  public final static native long ComputationGraph_add_const_parameters(long jarg1, ComputationGraph jarg1_, long jarg2, Parameter jarg2_);
  public final static native long ComputationGraph_add_lookup__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long ComputationGraph_add_lookup__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long ComputationGraph_add_lookup__SWIG_2(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3, UnsignedVector jarg3_);
  public final static native long ComputationGraph_add_const_lookup__SWIG_0(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long ComputationGraph_add_const_lookup__SWIG_1(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3);
  public final static native long ComputationGraph_add_const_lookup__SWIG_2(long jarg1, ComputationGraph jarg1_, long jarg2, LookupParameter jarg2_, long jarg3, UnsignedVector jarg3_);
  public final static native void ComputationGraph_clear(long jarg1, ComputationGraph jarg1_);
  public final static native void ComputationGraph_checkpoint(long jarg1, ComputationGraph jarg1_);
  public final static native void ComputationGraph_revert(long jarg1, ComputationGraph jarg1_);
  public final static native long ComputationGraph_get_dimension(long jarg1, ComputationGraph jarg1_, long jarg2);
  public final static native long ComputationGraph_forward(long jarg1, ComputationGraph jarg1_, long jarg2, Expression jarg2_);
  public final static native long ComputationGraph_incremental_forward(long jarg1, ComputationGraph jarg1_, long jarg2, Expression jarg2_);
  public final static native long ComputationGraph_get_value(long jarg1, ComputationGraph jarg1_, long jarg2, Expression jarg2_);
  public final static native void ComputationGraph_invalidate(long jarg1, ComputationGraph jarg1_);
  public final static native void ComputationGraph_backward(long jarg1, ComputationGraph jarg1_, long jarg2, Expression jarg2_);
  public final static native void ComputationGraph_print_graphviz(long jarg1, ComputationGraph jarg1_);
  public final static native void ComputationGraph_nodes_set(long jarg1, ComputationGraph jarg1_, long jarg2);
  public final static native long ComputationGraph_nodes_get(long jarg1, ComputationGraph jarg1_);
  public final static native void ComputationGraph_parameter_nodes_set(long jarg1, ComputationGraph jarg1_, long jarg2);
  public final static native long ComputationGraph_parameter_nodes_get(long jarg1, ComputationGraph jarg1_);
  public final static native int DeviceMempool_FXS_get();
  public final static native int DeviceMempool_DEDFS_get();
  public final static native int DeviceMempool_PS_get();
  public final static native int DeviceMempool_SCS_get();
  public final static native int DeviceMempool_NONE_get();
  public final static native void DeviceMempoolSizes_used_set(long jarg1, DeviceMempoolSizes jarg1_, long jarg2);
  public final static native long DeviceMempoolSizes_used_get(long jarg1, DeviceMempoolSizes jarg1_);
  public final static native long new_DeviceMempoolSizes__SWIG_0();
  public final static native long new_DeviceMempoolSizes__SWIG_1(long jarg1);
  public final static native long new_DeviceMempoolSizes__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long new_DeviceMempoolSizes__SWIG_3(String jarg1);
  public final static native void delete_DeviceMempoolSizes(long jarg1);
  public final static native void Device_device_id_set(long jarg1, Device jarg1_, int jarg2);
  public final static native int Device_device_id_get(long jarg1, Device jarg1_);
  public final static native void Device_type_set(long jarg1, Device jarg1_, int jarg2);
  public final static native int Device_type_get(long jarg1, Device jarg1_);
  public final static native void Device_mem_set(long jarg1, Device jarg1_, long jarg2);
  public final static native long Device_mem_get(long jarg1, Device jarg1_);
  public final static native void Device_kSCALAR_MINUSONE_set(long jarg1, Device jarg1_, long jarg2);
  public final static native long Device_kSCALAR_MINUSONE_get(long jarg1, Device jarg1_);
  public final static native void Device_kSCALAR_ONE_set(long jarg1, Device jarg1_, long jarg2);
  public final static native long Device_kSCALAR_ONE_get(long jarg1, Device jarg1_);
  public final static native void Device_kSCALAR_ZERO_set(long jarg1, Device jarg1_, long jarg2);
  public final static native long Device_kSCALAR_ZERO_get(long jarg1, Device jarg1_);
  public final static native void Device_name_set(long jarg1, Device jarg1_, String jarg2);
  public final static native String Device_name_get(long jarg1, Device jarg1_);
  public final static native long Device_mark(long jarg1, Device jarg1_, long jarg2, ComputationGraph jarg2_);
  public final static native void Device_revert(long jarg1, Device jarg1_, long jarg2, DeviceMempoolSizes jarg2_);
  public final static native void Device_allocate_tensor(long jarg1, Device jarg1_, int jarg2, long jarg3, Tensor jarg3_);
  public final static native void Device_pools_set(long jarg1, Device jarg1_, long jarg2);
  public final static native long Device_pools_get(long jarg1, Device jarg1_);
  public final static native void default_device_set(long jarg1, Device jarg1_);
  public final static native long default_device_get();
  public final static native void Trainer_update(long jarg1, Trainer jarg1_);
  public final static native void Trainer_update_epoch__SWIG_0(long jarg1, Trainer jarg1_, float jarg2);
  public final static native void Trainer_update_epoch__SWIG_1(long jarg1, Trainer jarg1_);
  public final static native void Trainer_restart__SWIG_0(long jarg1, Trainer jarg1_);
  public final static native void Trainer_restart__SWIG_1(long jarg1, Trainer jarg1_, float jarg2);
  public final static native float Trainer_clip_gradients(long jarg1, Trainer jarg1_);
  public final static native void Trainer_rescale_and_reset_weight_decay(long jarg1, Trainer jarg1_);
  public final static native void Trainer_learning_rate_set(long jarg1, Trainer jarg1_, float jarg2);
  public final static native float Trainer_learning_rate_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_clipping_enabled_set(long jarg1, Trainer jarg1_, boolean jarg2);
  public final static native boolean Trainer_clipping_enabled_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_clip_threshold_set(long jarg1, Trainer jarg1_, float jarg2);
  public final static native float Trainer_clip_threshold_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_clips_set(long jarg1, Trainer jarg1_, float jarg2);
  public final static native float Trainer_clips_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_updates_set(long jarg1, Trainer jarg1_, float jarg2);
  public final static native float Trainer_updates_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_clips_since_status_set(long jarg1, Trainer jarg1_, float jarg2);
  public final static native float Trainer_clips_since_status_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_updates_since_status_set(long jarg1, Trainer jarg1_, float jarg2);
  public final static native float Trainer_updates_since_status_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_sparse_updates_enabled_set(long jarg1, Trainer jarg1_, boolean jarg2);
  public final static native boolean Trainer_sparse_updates_enabled_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_aux_allocated_set(long jarg1, Trainer jarg1_, long jarg2);
  public final static native long Trainer_aux_allocated_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_aux_allocated_lookup_set(long jarg1, Trainer jarg1_, long jarg2);
  public final static native long Trainer_aux_allocated_lookup_get(long jarg1, Trainer jarg1_);
  public final static native void Trainer_status(long jarg1, Trainer jarg1_);
  public final static native void Trainer_model_set(long jarg1, Trainer jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native long Trainer_model_get(long jarg1, Trainer jarg1_);
  public final static native void delete_Trainer(long jarg1);
  public final static native long new_SimpleSGDTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_SimpleSGDTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_);
  public final static native void SimpleSGDTrainer_restart(long jarg1, SimpleSGDTrainer jarg1_);
  public final static native void delete_SimpleSGDTrainer(long jarg1);
  public final static native long new_CyclicalSGDTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
  public final static native long new_CyclicalSGDTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native long new_CyclicalSGDTrainer__SWIG_2(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long new_CyclicalSGDTrainer__SWIG_3(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3);
  public final static native long new_CyclicalSGDTrainer__SWIG_4(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_CyclicalSGDTrainer__SWIG_5(long jarg1, ParameterCollection jarg1_);
  public final static native void CyclicalSGDTrainer_restart(long jarg1, CyclicalSGDTrainer jarg1_);
  public final static native void CyclicalSGDTrainer_update(long jarg1, CyclicalSGDTrainer jarg1_);
  public final static native void delete_CyclicalSGDTrainer(long jarg1);
  public final static native long new_MomentumSGDTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3);
  public final static native long new_MomentumSGDTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_MomentumSGDTrainer__SWIG_2(long jarg1, ParameterCollection jarg1_);
  public final static native void MomentumSGDTrainer_restart(long jarg1, MomentumSGDTrainer jarg1_);
  public final static native void delete_MomentumSGDTrainer(long jarg1);
  public final static native long new_AdagradTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3);
  public final static native long new_AdagradTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_AdagradTrainer__SWIG_2(long jarg1, ParameterCollection jarg1_);
  public final static native void AdagradTrainer_restart(long jarg1, AdagradTrainer jarg1_);
  public final static native void delete_AdagradTrainer(long jarg1);
  public final static native long new_AdadeltaTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3);
  public final static native long new_AdadeltaTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_AdadeltaTrainer__SWIG_2(long jarg1, ParameterCollection jarg1_);
  public final static native void AdadeltaTrainer_restart(long jarg1, AdadeltaTrainer jarg1_);
  public final static native void delete_AdadeltaTrainer(long jarg1);
  public final static native long new_RMSPropTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long new_RMSPropTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3);
  public final static native long new_RMSPropTrainer__SWIG_2(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_RMSPropTrainer__SWIG_3(long jarg1, ParameterCollection jarg1_);
  public final static native void RMSPropTrainer_restart(long jarg1, RMSPropTrainer jarg1_);
  public final static native void delete_RMSPropTrainer(long jarg1);
  public final static native long new_AdamTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native long new_AdamTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long new_AdamTrainer__SWIG_2(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3);
  public final static native long new_AdamTrainer__SWIG_3(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_AdamTrainer__SWIG_4(long jarg1, ParameterCollection jarg1_);
  public final static native void AdamTrainer_restart(long jarg1, AdamTrainer jarg1_);
  public final static native void delete_AdamTrainer(long jarg1);
  public final static native long new_AmsgradTrainer__SWIG_0(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4, float jarg5);
  public final static native long new_AmsgradTrainer__SWIG_1(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native long new_AmsgradTrainer__SWIG_2(long jarg1, ParameterCollection jarg1_, float jarg2, float jarg3);
  public final static native long new_AmsgradTrainer__SWIG_3(long jarg1, ParameterCollection jarg1_, float jarg2);
  public final static native long new_AmsgradTrainer__SWIG_4(long jarg1, ParameterCollection jarg1_);
  public final static native void AmsgradTrainer_restart(long jarg1, AmsgradTrainer jarg1_);
  public final static native void delete_AmsgradTrainer(long jarg1);
  public final static native int RNNBuilder_state(long jarg1, RNNBuilder jarg1_);
  public final static native void RNNBuilder_new_graph__SWIG_0(long jarg1, RNNBuilder jarg1_, long jarg2, ComputationGraph jarg2_, boolean jarg3);
  public final static native void RNNBuilder_new_graph__SWIG_1(long jarg1, RNNBuilder jarg1_, long jarg2, ComputationGraph jarg2_);
  public final static native void RNNBuilder_start_new_sequence__SWIG_0(long jarg1, RNNBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native void RNNBuilder_start_new_sequence__SWIG_1(long jarg1, RNNBuilder jarg1_);
  public final static native long RNNBuilder_set_h__SWIG_0(long jarg1, RNNBuilder jarg1_, int jarg2, long jarg3, ExpressionVector jarg3_);
  public final static native long RNNBuilder_set_h__SWIG_1(long jarg1, RNNBuilder jarg1_, int jarg2);
  public final static native long RNNBuilder_set_s__SWIG_0(long jarg1, RNNBuilder jarg1_, int jarg2, long jarg3, ExpressionVector jarg3_);
  public final static native long RNNBuilder_set_s__SWIG_1(long jarg1, RNNBuilder jarg1_, int jarg2);
  public final static native long RNNBuilder_add_input__SWIG_0(long jarg1, RNNBuilder jarg1_, long jarg2, Expression jarg2_);
  public final static native long RNNBuilder_add_input__SWIG_1(long jarg1, RNNBuilder jarg1_, int jarg2, long jarg3, Expression jarg3_);
  public final static native void RNNBuilder_rewind_one_step(long jarg1, RNNBuilder jarg1_);
  public final static native int RNNBuilder_get_head(long jarg1, RNNBuilder jarg1_, int jarg2);
  public final static native void RNNBuilder_set_dropout(long jarg1, RNNBuilder jarg1_, float jarg2);
  public final static native void RNNBuilder_disable_dropout(long jarg1, RNNBuilder jarg1_);
  public final static native long RNNBuilder_back(long jarg1, RNNBuilder jarg1_);
  public final static native long RNNBuilder_final_h(long jarg1, RNNBuilder jarg1_);
  public final static native long RNNBuilder_get_h(long jarg1, RNNBuilder jarg1_, int jarg2);
  public final static native long RNNBuilder_final_s(long jarg1, RNNBuilder jarg1_);
  public final static native long RNNBuilder_get_s(long jarg1, RNNBuilder jarg1_, int jarg2);
  public final static native long RNNBuilder_num_h0_components(long jarg1, RNNBuilder jarg1_);
  public final static native void RNNBuilder_copy(long jarg1, RNNBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native long RNNBuilder_get_parameter_collection(long jarg1, RNNBuilder jarg1_);
  public final static native void delete_RNNBuilder(long jarg1);
  public final static native long new_SimpleRNNBuilder__SWIG_0();
  public final static native long new_SimpleRNNBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_, boolean jarg5);
  public final static native long new_SimpleRNNBuilder__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native long SimpleRNNBuilder_add_auxiliary_input(long jarg1, SimpleRNNBuilder jarg1_, long jarg2, Expression jarg2_, long jarg3, Expression jarg3_);
  public final static native long SimpleRNNBuilder_back(long jarg1, SimpleRNNBuilder jarg1_);
  public final static native long SimpleRNNBuilder_final_h(long jarg1, SimpleRNNBuilder jarg1_);
  public final static native long SimpleRNNBuilder_final_s(long jarg1, SimpleRNNBuilder jarg1_);
  public final static native long SimpleRNNBuilder_get_h(long jarg1, SimpleRNNBuilder jarg1_, int jarg2);
  public final static native long SimpleRNNBuilder_get_s(long jarg1, SimpleRNNBuilder jarg1_, int jarg2);
  public final static native void SimpleRNNBuilder_copy(long jarg1, SimpleRNNBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native long SimpleRNNBuilder_num_h0_components(long jarg1, SimpleRNNBuilder jarg1_);
  public final static native long SimpleRNNBuilder_get_parameter_collection(long jarg1, SimpleRNNBuilder jarg1_);
  public final static native long new_SimpleRNNBuilder__SWIG_3(long jarg1, SimpleRNNBuilder jarg1_);
  public final static native void delete_SimpleRNNBuilder(long jarg1);
  public final static native long new_CoupledLSTMBuilder__SWIG_0();
  public final static native long new_CoupledLSTMBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native long CoupledLSTMBuilder_back(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native long CoupledLSTMBuilder_final_h(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native long CoupledLSTMBuilder_final_s(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native long CoupledLSTMBuilder_num_h0_components(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native long CoupledLSTMBuilder_get_h(long jarg1, CoupledLSTMBuilder jarg1_, int jarg2);
  public final static native long CoupledLSTMBuilder_get_s(long jarg1, CoupledLSTMBuilder jarg1_, int jarg2);
  public final static native void CoupledLSTMBuilder_copy(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native void CoupledLSTMBuilder_set_dropout__SWIG_0(long jarg1, CoupledLSTMBuilder jarg1_, float jarg2);
  public final static native void CoupledLSTMBuilder_set_dropout__SWIG_1(long jarg1, CoupledLSTMBuilder jarg1_, float jarg2, float jarg3, float jarg4);
  public final static native void CoupledLSTMBuilder_disable_dropout(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_set_dropout_masks__SWIG_0(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2);
  public final static native void CoupledLSTMBuilder_set_dropout_masks__SWIG_1(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native long CoupledLSTMBuilder_get_parameter_collection(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_local_model_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native long CoupledLSTMBuilder_local_model_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_params_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ParameterVectorVector jarg2_);
  public final static native long CoupledLSTMBuilder_params_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_param_vars_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CoupledLSTMBuilder_param_vars_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_masks_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CoupledLSTMBuilder_masks_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_h_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CoupledLSTMBuilder_h_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_c_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CoupledLSTMBuilder_c_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_has_initial_state_set(long jarg1, CoupledLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean CoupledLSTMBuilder_has_initial_state_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_h0_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long CoupledLSTMBuilder_h0_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_c0_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long CoupledLSTMBuilder_c0_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_layers_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2);
  public final static native long CoupledLSTMBuilder_layers_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_input_dim_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2);
  public final static native long CoupledLSTMBuilder_input_dim_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_hid_set(long jarg1, CoupledLSTMBuilder jarg1_, long jarg2);
  public final static native long CoupledLSTMBuilder_hid_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_dropout_masks_valid_set(long jarg1, CoupledLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean CoupledLSTMBuilder_dropout_masks_valid_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_dropout_rate_h_set(long jarg1, CoupledLSTMBuilder jarg1_, float jarg2);
  public final static native float CoupledLSTMBuilder_dropout_rate_h_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void CoupledLSTMBuilder_dropout_rate_c_set(long jarg1, CoupledLSTMBuilder jarg1_, float jarg2);
  public final static native float CoupledLSTMBuilder_dropout_rate_c_get(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native long new_CoupledLSTMBuilder__SWIG_2(long jarg1, CoupledLSTMBuilder jarg1_);
  public final static native void delete_CoupledLSTMBuilder(long jarg1);
  public final static native long new_VanillaLSTMBuilder__SWIG_0();
  public final static native long new_VanillaLSTMBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_, boolean jarg5, float jarg6);
  public final static native long new_VanillaLSTMBuilder__SWIG_2(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_, boolean jarg5);
  public final static native long new_VanillaLSTMBuilder__SWIG_3(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native long VanillaLSTMBuilder_back(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native long VanillaLSTMBuilder_final_h(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native long VanillaLSTMBuilder_final_s(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native long VanillaLSTMBuilder_num_h0_components(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native long VanillaLSTMBuilder_get_h(long jarg1, VanillaLSTMBuilder jarg1_, int jarg2);
  public final static native long VanillaLSTMBuilder_get_s(long jarg1, VanillaLSTMBuilder jarg1_, int jarg2);
  public final static native void VanillaLSTMBuilder_copy(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native void VanillaLSTMBuilder_set_dropout__SWIG_0(long jarg1, VanillaLSTMBuilder jarg1_, float jarg2);
  public final static native void VanillaLSTMBuilder_set_dropout__SWIG_1(long jarg1, VanillaLSTMBuilder jarg1_, float jarg2, float jarg3);
  public final static native void VanillaLSTMBuilder_disable_dropout(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_set_dropout_masks__SWIG_0(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2);
  public final static native void VanillaLSTMBuilder_set_dropout_masks__SWIG_1(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native long VanillaLSTMBuilder_get_parameter_collection(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_local_model_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native long VanillaLSTMBuilder_local_model_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_params_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ParameterVectorVector jarg2_);
  public final static native long VanillaLSTMBuilder_params_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_ln_params_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ParameterVectorVector jarg2_);
  public final static native long VanillaLSTMBuilder_ln_params_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_param_vars_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long VanillaLSTMBuilder_param_vars_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_ln_param_vars_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long VanillaLSTMBuilder_ln_param_vars_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_masks_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long VanillaLSTMBuilder_masks_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_h_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long VanillaLSTMBuilder_h_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_c_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long VanillaLSTMBuilder_c_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_has_initial_state_set(long jarg1, VanillaLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean VanillaLSTMBuilder_has_initial_state_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_h0_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long VanillaLSTMBuilder_h0_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_c0_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long VanillaLSTMBuilder_c0_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_layers_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2);
  public final static native long VanillaLSTMBuilder_layers_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_input_dim_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2);
  public final static native long VanillaLSTMBuilder_input_dim_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_hid_set(long jarg1, VanillaLSTMBuilder jarg1_, long jarg2);
  public final static native long VanillaLSTMBuilder_hid_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_dropout_rate_h_set(long jarg1, VanillaLSTMBuilder jarg1_, float jarg2);
  public final static native float VanillaLSTMBuilder_dropout_rate_h_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_ln_lstm_set(long jarg1, VanillaLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean VanillaLSTMBuilder_ln_lstm_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_forget_bias_set(long jarg1, VanillaLSTMBuilder jarg1_, float jarg2);
  public final static native float VanillaLSTMBuilder_forget_bias_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void VanillaLSTMBuilder_dropout_masks_valid_set(long jarg1, VanillaLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean VanillaLSTMBuilder_dropout_masks_valid_get(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native long new_VanillaLSTMBuilder__SWIG_4(long jarg1, VanillaLSTMBuilder jarg1_);
  public final static native void delete_VanillaLSTMBuilder(long jarg1);
  public final static native long new_CompactVanillaLSTMBuilder__SWIG_0();
  public final static native long new_CompactVanillaLSTMBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native long CompactVanillaLSTMBuilder_back(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native long CompactVanillaLSTMBuilder_final_h(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native long CompactVanillaLSTMBuilder_final_s(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native long CompactVanillaLSTMBuilder_num_h0_components(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native long CompactVanillaLSTMBuilder_get_h(long jarg1, CompactVanillaLSTMBuilder jarg1_, int jarg2);
  public final static native long CompactVanillaLSTMBuilder_get_s(long jarg1, CompactVanillaLSTMBuilder jarg1_, int jarg2);
  public final static native void CompactVanillaLSTMBuilder_copy(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native void CompactVanillaLSTMBuilder_set_dropout__SWIG_0(long jarg1, CompactVanillaLSTMBuilder jarg1_, float jarg2);
  public final static native void CompactVanillaLSTMBuilder_set_dropout__SWIG_1(long jarg1, CompactVanillaLSTMBuilder jarg1_, float jarg2, float jarg3);
  public final static native void CompactVanillaLSTMBuilder_disable_dropout(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_set_dropout_masks__SWIG_0(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2);
  public final static native void CompactVanillaLSTMBuilder_set_dropout_masks__SWIG_1(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_set_weightnoise(long jarg1, CompactVanillaLSTMBuilder jarg1_, float jarg2);
  public final static native long CompactVanillaLSTMBuilder_get_parameter_collection(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_local_model_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native long CompactVanillaLSTMBuilder_local_model_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_params_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ParameterVectorVector jarg2_);
  public final static native long CompactVanillaLSTMBuilder_params_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_param_vars_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CompactVanillaLSTMBuilder_param_vars_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_masks_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CompactVanillaLSTMBuilder_masks_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_h_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CompactVanillaLSTMBuilder_h_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_c_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long CompactVanillaLSTMBuilder_c_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_has_initial_state_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean CompactVanillaLSTMBuilder_has_initial_state_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_h0_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long CompactVanillaLSTMBuilder_h0_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_c0_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long CompactVanillaLSTMBuilder_c0_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_layers_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2);
  public final static native long CompactVanillaLSTMBuilder_layers_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_input_dim_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2);
  public final static native long CompactVanillaLSTMBuilder_input_dim_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_hid_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, long jarg2);
  public final static native long CompactVanillaLSTMBuilder_hid_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_dropout_rate_h_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, float jarg2);
  public final static native float CompactVanillaLSTMBuilder_dropout_rate_h_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_weightnoise_std_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, float jarg2);
  public final static native float CompactVanillaLSTMBuilder_weightnoise_std_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void CompactVanillaLSTMBuilder_dropout_masks_valid_set(long jarg1, CompactVanillaLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean CompactVanillaLSTMBuilder_dropout_masks_valid_get(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native long new_CompactVanillaLSTMBuilder__SWIG_2(long jarg1, CompactVanillaLSTMBuilder jarg1_);
  public final static native void delete_CompactVanillaLSTMBuilder(long jarg1);
  public final static native long new_GRUBuilder__SWIG_0();
  public final static native long new_GRUBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native long GRUBuilder_back(long jarg1, GRUBuilder jarg1_);
  public final static native long GRUBuilder_final_h(long jarg1, GRUBuilder jarg1_);
  public final static native long GRUBuilder_final_s(long jarg1, GRUBuilder jarg1_);
  public final static native long GRUBuilder_get_h(long jarg1, GRUBuilder jarg1_, int jarg2);
  public final static native long GRUBuilder_get_s(long jarg1, GRUBuilder jarg1_, int jarg2);
  public final static native long GRUBuilder_num_h0_components(long jarg1, GRUBuilder jarg1_);
  public final static native void GRUBuilder_copy(long jarg1, GRUBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native long GRUBuilder_get_parameter_collection(long jarg1, GRUBuilder jarg1_);
  public final static native long new_GRUBuilder__SWIG_2(long jarg1, GRUBuilder jarg1_);
  public final static native void delete_GRUBuilder(long jarg1);
  public final static native long new_FastLSTMBuilder__SWIG_0();
  public final static native long new_FastLSTMBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native long FastLSTMBuilder_back(long jarg1, FastLSTMBuilder jarg1_);
  public final static native long FastLSTMBuilder_final_h(long jarg1, FastLSTMBuilder jarg1_);
  public final static native long FastLSTMBuilder_final_s(long jarg1, FastLSTMBuilder jarg1_);
  public final static native long FastLSTMBuilder_num_h0_components(long jarg1, FastLSTMBuilder jarg1_);
  public final static native long FastLSTMBuilder_get_h(long jarg1, FastLSTMBuilder jarg1_, int jarg2);
  public final static native long FastLSTMBuilder_get_s(long jarg1, FastLSTMBuilder jarg1_, int jarg2);
  public final static native void FastLSTMBuilder_copy(long jarg1, FastLSTMBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native long FastLSTMBuilder_get_parameter_collection(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_local_model_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native long FastLSTMBuilder_local_model_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_params_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2, ParameterVectorVector jarg2_);
  public final static native long FastLSTMBuilder_params_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_param_vars_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long FastLSTMBuilder_param_vars_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_h_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long FastLSTMBuilder_h_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_c_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2, ExpressionVectorVector jarg2_);
  public final static native long FastLSTMBuilder_c_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_has_initial_state_set(long jarg1, FastLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean FastLSTMBuilder_has_initial_state_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_h0_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long FastLSTMBuilder_h0_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_c0_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long FastLSTMBuilder_c0_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void FastLSTMBuilder_layers_set(long jarg1, FastLSTMBuilder jarg1_, long jarg2);
  public final static native long FastLSTMBuilder_layers_get(long jarg1, FastLSTMBuilder jarg1_);
  public final static native long new_FastLSTMBuilder__SWIG_2(long jarg1, FastLSTMBuilder jarg1_);
  public final static native void delete_FastLSTMBuilder(long jarg1);
  public final static native void TreeLSTMBuilder_set_num_elements(long jarg1, TreeLSTMBuilder jarg1_, int jarg2);
  public final static native long TreeLSTMBuilder_add_input(long jarg1, TreeLSTMBuilder jarg1_, int jarg2, long jarg3, IntVector jarg3_, long jarg4, Expression jarg4_);
  public final static native long TreeLSTMBuilder_final_h(long jarg1, TreeLSTMBuilder jarg1_);
  public final static native long TreeLSTMBuilder_final_s(long jarg1, TreeLSTMBuilder jarg1_);
  public final static native long TreeLSTMBuilder_get_h(long jarg1, TreeLSTMBuilder jarg1_, int jarg2);
  public final static native long TreeLSTMBuilder_get_s(long jarg1, TreeLSTMBuilder jarg1_, int jarg2);
  public final static native long TreeLSTMBuilder_num_h0_components(long jarg1, TreeLSTMBuilder jarg1_);
  public final static native void TreeLSTMBuilder_copy(long jarg1, TreeLSTMBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native void delete_TreeLSTMBuilder(long jarg1);
  public final static native long new_NaryTreeLSTMBuilder__SWIG_0(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, ParameterCollection jarg5_);
  public final static native void NaryTreeLSTMBuilder_set_num_elements(long jarg1, NaryTreeLSTMBuilder jarg1_, int jarg2);
  public final static native long NaryTreeLSTMBuilder_add_input(long jarg1, NaryTreeLSTMBuilder jarg1_, int jarg2, long jarg3, IntVector jarg3_, long jarg4, Expression jarg4_);
  public final static native void NaryTreeLSTMBuilder_copy(long jarg1, NaryTreeLSTMBuilder jarg1_, long jarg2, RNNBuilder jarg2_);
  public final static native long NaryTreeLSTMBuilder_get_parameter_collection(long jarg1, NaryTreeLSTMBuilder jarg1_);
  public final static native void NaryTreeLSTMBuilder_has_initial_state_set(long jarg1, NaryTreeLSTMBuilder jarg1_, boolean jarg2);
  public final static native boolean NaryTreeLSTMBuilder_has_initial_state_get(long jarg1, NaryTreeLSTMBuilder jarg1_);
  public final static native void NaryTreeLSTMBuilder_h0_set(long jarg1, NaryTreeLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long NaryTreeLSTMBuilder_h0_get(long jarg1, NaryTreeLSTMBuilder jarg1_);
  public final static native void NaryTreeLSTMBuilder_c0_set(long jarg1, NaryTreeLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long NaryTreeLSTMBuilder_c0_get(long jarg1, NaryTreeLSTMBuilder jarg1_);
  public final static native void NaryTreeLSTMBuilder_layers_set(long jarg1, NaryTreeLSTMBuilder jarg1_, long jarg2);
  public final static native long NaryTreeLSTMBuilder_layers_get(long jarg1, NaryTreeLSTMBuilder jarg1_);
  public final static native void NaryTreeLSTMBuilder_N_set(long jarg1, NaryTreeLSTMBuilder jarg1_, long jarg2);
  public final static native long NaryTreeLSTMBuilder_N_get(long jarg1, NaryTreeLSTMBuilder jarg1_);
  public final static native long new_NaryTreeLSTMBuilder__SWIG_1(long jarg1, NaryTreeLSTMBuilder jarg1_);
  public final static native void delete_NaryTreeLSTMBuilder(long jarg1);
  public final static native long new_UnidirectionalTreeLSTMBuilder__SWIG_0();
  public final static native long new_UnidirectionalTreeLSTMBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native void UnidirectionalTreeLSTMBuilder_set_num_elements(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_, int jarg2);
  public final static native long UnidirectionalTreeLSTMBuilder_add_input(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_, int jarg2, long jarg3, IntVector jarg3_, long jarg4, Expression jarg4_);
  public final static native long UnidirectionalTreeLSTMBuilder_get_parameter_collection(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_);
  public final static native void UnidirectionalTreeLSTMBuilder_local_model_set(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native long UnidirectionalTreeLSTMBuilder_local_model_get(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_);
  public final static native void UnidirectionalTreeLSTMBuilder_node_builder_set(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_, long jarg2, VanillaLSTMBuilder jarg2_);
  public final static native long UnidirectionalTreeLSTMBuilder_node_builder_get(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_);
  public final static native void UnidirectionalTreeLSTMBuilder_h_set(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long UnidirectionalTreeLSTMBuilder_h_get(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_);
  public final static native long new_UnidirectionalTreeLSTMBuilder__SWIG_2(long jarg1, UnidirectionalTreeLSTMBuilder jarg1_);
  public final static native void delete_UnidirectionalTreeLSTMBuilder(long jarg1);
  public final static native long new_BidirectionalTreeLSTMBuilder__SWIG_0();
  public final static native long new_BidirectionalTreeLSTMBuilder__SWIG_1(long jarg1, long jarg2, long jarg3, long jarg4, ParameterCollection jarg4_);
  public final static native void BidirectionalTreeLSTMBuilder_set_num_elements(long jarg1, BidirectionalTreeLSTMBuilder jarg1_, int jarg2);
  public final static native long BidirectionalTreeLSTMBuilder_add_input(long jarg1, BidirectionalTreeLSTMBuilder jarg1_, int jarg2, long jarg3, IntVector jarg3_, long jarg4, Expression jarg4_);
  public final static native long BidirectionalTreeLSTMBuilder_get_parameter_collection(long jarg1, BidirectionalTreeLSTMBuilder jarg1_);
  public final static native void BidirectionalTreeLSTMBuilder_fwd_node_builder_set(long jarg1, BidirectionalTreeLSTMBuilder jarg1_, long jarg2, VanillaLSTMBuilder jarg2_);
  public final static native long BidirectionalTreeLSTMBuilder_fwd_node_builder_get(long jarg1, BidirectionalTreeLSTMBuilder jarg1_);
  public final static native void BidirectionalTreeLSTMBuilder_rev_node_builder_set(long jarg1, BidirectionalTreeLSTMBuilder jarg1_, long jarg2, VanillaLSTMBuilder jarg2_);
  public final static native long BidirectionalTreeLSTMBuilder_rev_node_builder_get(long jarg1, BidirectionalTreeLSTMBuilder jarg1_);
  public final static native void BidirectionalTreeLSTMBuilder_h_set(long jarg1, BidirectionalTreeLSTMBuilder jarg1_, long jarg2, ExpressionVector jarg2_);
  public final static native long BidirectionalTreeLSTMBuilder_h_get(long jarg1, BidirectionalTreeLSTMBuilder jarg1_);
  public final static native void BidirectionalTreeLSTMBuilder_local_model_set(long jarg1, BidirectionalTreeLSTMBuilder jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native long BidirectionalTreeLSTMBuilder_local_model_get(long jarg1, BidirectionalTreeLSTMBuilder jarg1_);
  public final static native long new_BidirectionalTreeLSTMBuilder__SWIG_2(long jarg1, BidirectionalTreeLSTMBuilder jarg1_);
  public final static native void delete_BidirectionalTreeLSTMBuilder(long jarg1);
  public final static native void DynetParams_random_seed_set(long jarg1, DynetParams jarg1_, long jarg2);
  public final static native long DynetParams_random_seed_get(long jarg1, DynetParams jarg1_);
  public final static native void DynetParams_mem_descriptor_set(long jarg1, DynetParams jarg1_, String jarg2);
  public final static native String DynetParams_mem_descriptor_get(long jarg1, DynetParams jarg1_);
  public final static native void DynetParams_weight_decay_set(long jarg1, DynetParams jarg1_, float jarg2);
  public final static native float DynetParams_weight_decay_get(long jarg1, DynetParams jarg1_);
  public final static native void DynetParams_autobatch_set(long jarg1, DynetParams jarg1_, int jarg2);
  public final static native int DynetParams_autobatch_get(long jarg1, DynetParams jarg1_);
  public final static native void DynetParams_profiling_set(long jarg1, DynetParams jarg1_, int jarg2);
  public final static native int DynetParams_profiling_get(long jarg1, DynetParams jarg1_);
  public final static native void DynetParams_forward_only_set(long jarg1, DynetParams jarg1_, int jarg2);
  public final static native int DynetParams_forward_only_get(long jarg1, DynetParams jarg1_);
  public final static native void DynetParams_shared_parameters_set(long jarg1, DynetParams jarg1_, boolean jarg2);
  public final static native boolean DynetParams_shared_parameters_get(long jarg1, DynetParams jarg1_);
  public final static native void DynetParams_dynamic_set(long jarg1, DynetParams jarg1_, boolean jarg2);
  public final static native boolean DynetParams_dynamic_get(long jarg1, DynetParams jarg1_);
  public final static native long new_DynetParams();
  public final static native void delete_DynetParams(long jarg1);
  public final static native void initialize__SWIG_0(long jarg1, DynetParams jarg1_);
  public final static native void initialize__SWIG_1(long jarg1, long jarg2, boolean jarg3);
  public final static native void initialize__SWIG_2(long jarg1, long jarg2);
  public final static native void cleanup();
  public final static native void reset_rng(long jarg1);
  public final static native void delete_Saver(long jarg1);
  public final static native void Saver_save__SWIG_0(long jarg1, Saver jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native void Saver_save__SWIG_1(long jarg1, Saver jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native void Saver_save__SWIG_2(long jarg1, Saver jarg1_, long jarg2, Parameter jarg2_, String jarg3);
  public final static native void Saver_save__SWIG_3(long jarg1, Saver jarg1_, long jarg2, Parameter jarg2_);
  public final static native void Saver_save__SWIG_4(long jarg1, Saver jarg1_, long jarg2, LookupParameter jarg2_, String jarg3);
  public final static native void Saver_save__SWIG_5(long jarg1, Saver jarg1_, long jarg2, LookupParameter jarg2_);
  public final static native void delete_Loader(long jarg1);
  public final static native void Loader_populate__SWIG_0(long jarg1, Loader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native void Loader_populate__SWIG_1(long jarg1, Loader jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native void Loader_populate__SWIG_2(long jarg1, Loader jarg1_, long jarg2, Parameter jarg2_, String jarg3);
  public final static native void Loader_populate__SWIG_3(long jarg1, Loader jarg1_, long jarg2, Parameter jarg2_);
  public final static native void Loader_populate__SWIG_4(long jarg1, Loader jarg1_, long jarg2, LookupParameter jarg2_, String jarg3);
  public final static native void Loader_populate__SWIG_5(long jarg1, Loader jarg1_, long jarg2, LookupParameter jarg2_);
  public final static native long Loader_load_param(long jarg1, Loader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native long Loader_load_lookup_param(long jarg1, Loader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native long new_TextFileSaver__SWIG_0(String jarg1, boolean jarg2);
  public final static native long new_TextFileSaver__SWIG_1(String jarg1);
  public final static native void delete_TextFileSaver(long jarg1);
  public final static native void TextFileSaver_save__SWIG_0(long jarg1, TextFileSaver jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native void TextFileSaver_save__SWIG_1(long jarg1, TextFileSaver jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native void TextFileSaver_save__SWIG_2(long jarg1, TextFileSaver jarg1_, long jarg2, Parameter jarg2_, String jarg3);
  public final static native void TextFileSaver_save__SWIG_3(long jarg1, TextFileSaver jarg1_, long jarg2, Parameter jarg2_);
  public final static native void TextFileSaver_save__SWIG_4(long jarg1, TextFileSaver jarg1_, long jarg2, LookupParameter jarg2_, String jarg3);
  public final static native void TextFileSaver_save__SWIG_5(long jarg1, TextFileSaver jarg1_, long jarg2, LookupParameter jarg2_);
  public final static native void delete_BaseFileLoader(long jarg1);
  public final static native long new_TextFileLoader(String jarg1);
  public final static native void delete_TextFileLoader(long jarg1);
  public final static native void TextFileLoader_populate__SWIG_0(long jarg1, TextFileLoader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native void TextFileLoader_populate__SWIG_1(long jarg1, TextFileLoader jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native void TextFileLoader_populate__SWIG_2(long jarg1, TextFileLoader jarg1_, long jarg2, Parameter jarg2_, String jarg3);
  public final static native void TextFileLoader_populate__SWIG_3(long jarg1, TextFileLoader jarg1_, long jarg2, Parameter jarg2_);
  public final static native void TextFileLoader_populate__SWIG_4(long jarg1, TextFileLoader jarg1_, long jarg2, LookupParameter jarg2_, String jarg3);
  public final static native void TextFileLoader_populate__SWIG_5(long jarg1, TextFileLoader jarg1_, long jarg2, LookupParameter jarg2_);
  public final static native long TextFileLoader_load_param(long jarg1, TextFileLoader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native long TextFileLoader_load_lookup_param(long jarg1, TextFileLoader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native long new_ZipFileLoader(String jarg1, String jarg2);
  public final static native void delete_ZipFileLoader(long jarg1);
  public final static native void ZipFileLoader_populate__SWIG_0(long jarg1, ZipFileLoader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native void ZipFileLoader_populate__SWIG_1(long jarg1, ZipFileLoader jarg1_, long jarg2, ParameterCollection jarg2_);
  public final static native void ZipFileLoader_populate__SWIG_2(long jarg1, ZipFileLoader jarg1_, long jarg2, Parameter jarg2_, String jarg3);
  public final static native void ZipFileLoader_populate__SWIG_3(long jarg1, ZipFileLoader jarg1_, long jarg2, Parameter jarg2_);
  public final static native void ZipFileLoader_populate__SWIG_4(long jarg1, ZipFileLoader jarg1_, long jarg2, LookupParameter jarg2_, String jarg3);
  public final static native void ZipFileLoader_populate__SWIG_5(long jarg1, ZipFileLoader jarg1_, long jarg2, LookupParameter jarg2_);
  public final static native long ZipFileLoader_load_param(long jarg1, ZipFileLoader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native long ZipFileLoader_load_lookup_param(long jarg1, ZipFileLoader jarg1_, long jarg2, ParameterCollection jarg2_, String jarg3);
  public final static native long ParameterInitNormal_SWIGUpcast(long jarg1);
  public final static native long ParameterInitUniform_SWIGUpcast(long jarg1);
  public final static native long ParameterInitConst_SWIGUpcast(long jarg1);
  public final static native long ParameterInitIdentity_SWIGUpcast(long jarg1);
  public final static native long ParameterInitGlorot_SWIGUpcast(long jarg1);
  public final static native long ParameterInitFromFile_SWIGUpcast(long jarg1);
  public final static native long ParameterInitFromVector_SWIGUpcast(long jarg1);
  public final static native long ParameterStorage_SWIGSmartPtrUpcast(long jarg1);
  public final static native long LookupParameterStorage_SWIGSmartPtrUpcast(long jarg1);
  public final static native long SimpleSGDTrainer_SWIGUpcast(long jarg1);
  public final static native long CyclicalSGDTrainer_SWIGUpcast(long jarg1);
  public final static native long MomentumSGDTrainer_SWIGUpcast(long jarg1);
  public final static native long AdagradTrainer_SWIGUpcast(long jarg1);
  public final static native long AdadeltaTrainer_SWIGUpcast(long jarg1);
  public final static native long RMSPropTrainer_SWIGUpcast(long jarg1);
  public final static native long AdamTrainer_SWIGUpcast(long jarg1);
  public final static native long AmsgradTrainer_SWIGUpcast(long jarg1);
  public final static native long SimpleRNNBuilder_SWIGUpcast(long jarg1);
  public final static native long CoupledLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long VanillaLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long CompactVanillaLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long GRUBuilder_SWIGUpcast(long jarg1);
  public final static native long FastLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long TreeLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long NaryTreeLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long UnidirectionalTreeLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long BidirectionalTreeLSTMBuilder_SWIGUpcast(long jarg1);
  public final static native long TextFileSaver_SWIGUpcast(long jarg1);
  public final static native long BaseFileLoader_SWIGUpcast(long jarg1);
  public final static native long TextFileLoader_SWIGUpcast(long jarg1);
  public final static native long ZipFileLoader_SWIGUpcast(long jarg1);
}
