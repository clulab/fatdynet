/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package edu.cmu.dynet.internal;

public class LookupParameterStorage extends ParameterStorageBase {
  private transient long swigCPtr;
  private transient boolean swigCMemOwnDerived;

  protected LookupParameterStorage(long cPtr, boolean cMemoryOwn) {
    super(dynet_swigJNI.LookupParameterStorage_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LookupParameterStorage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        dynet_swigJNI.delete_LookupParameterStorage(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void scale_parameters(float a) {
    dynet_swigJNI.LookupParameterStorage_scale_parameters(swigCPtr, this, a);
  }

  public void zero() {
    dynet_swigJNI.LookupParameterStorage_zero(swigCPtr, this);
  }

  public void squared_l2norm(SWIGTYPE_p_float sqnorm) {
    dynet_swigJNI.LookupParameterStorage_squared_l2norm(swigCPtr, this, SWIGTYPE_p_float.getCPtr(sqnorm));
  }

  public void g_squared_l2norm(SWIGTYPE_p_float sqnorm) {
    dynet_swigJNI.LookupParameterStorage_g_squared_l2norm(swigCPtr, this, SWIGTYPE_p_float.getCPtr(sqnorm));
  }

  public long size() {
    return dynet_swigJNI.LookupParameterStorage_size(swigCPtr, this);
  }

  public void initialize(long index, FloatVector val) {
    dynet_swigJNI.LookupParameterStorage_initialize(swigCPtr, this, index, FloatVector.getCPtr(val), val);
  }

  public void copy(LookupParameterStorage val) {
    dynet_swigJNI.LookupParameterStorage_copy(swigCPtr, this, LookupParameterStorage.getCPtr(val), val);
  }

  public void accumulate_grad(long index, Tensor g) {
    dynet_swigJNI.LookupParameterStorage_accumulate_grad(swigCPtr, this, index, Tensor.getCPtr(g), g);
  }

  public void accumulate_grads(long n, SWIGTYPE_p_unsigned_int ids_host, SWIGTYPE_p_unsigned_int ids_dev, SWIGTYPE_p_float g) {
    dynet_swigJNI.LookupParameterStorage_accumulate_grads(swigCPtr, this, n, SWIGTYPE_p_unsigned_int.getCPtr(ids_host), SWIGTYPE_p_unsigned_int.getCPtr(ids_dev), SWIGTYPE_p_float.getCPtr(g));
  }

  public void clear() {
    dynet_swigJNI.LookupParameterStorage_clear(swigCPtr, this);
  }

  public void initialize_lookups() {
    dynet_swigJNI.LookupParameterStorage_initialize_lookups(swigCPtr, this);
  }

}
